import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Toaster } from 'react-hot-toast';
import { Suspense } from "react";
import LoadingPage from "@components/Organisms/Loading";
import { getServerSession } from "next-auth";
import { authOptions } from "@lib/authOptions";
import Header from "@components/Organisms/Header";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const check = async () => {
  return await getServerSession(authOptions) as METADATA.ISession;
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const c = await check()
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Toaster />
        <Suspense fallback={<LoadingPage />}>
          <Header session={c} />
          {children}
        </Suspense>

      </body>
    </html>
  );
}
