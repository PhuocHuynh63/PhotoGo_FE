'use client'

import Image from "next/image"
import { Card, CardContent } from "@/components/Atoms/ui/card"
import { Star } from "lucide-react"
import { useEffect, useState, useRef } from "react";
import { motion, useInView } from "framer-motion";
import Link from "next/link"
import Button from "@components/Atoms/Button";

export default function AboutPage() {

    const [cusSatisfied] = useState(5000);
    const [cusSatisfiedAnimated, setCusSatisfiedAnimated] = useState(0);
    const [projectsCompleted] = useState(1000);
    const [projectsCompletedAnimated, setProjectsCompletedAnimated] = useState(0);
    const [hoursWorked] = useState(50000);
    const [hoursWorkedAnimated, setHoursWorkedAnimated] = useState(0);
    const [employees] = useState(100);
    const [employeesAnimated, setEmployeesAnimated] = useState(0);

    const statsRef = useRef(null);
    const storyRef = useRef(null);
    const missionRef = useRef(null);
    const servicesRef = useRef(null);
    const testimonialsRef = useRef(null);

    const isStatsInView = useInView(statsRef, { once: true, margin: "-100px" });
    const isStoryInView = useInView(storyRef, { once: true, margin: "-100px" });
    const isMissionInView = useInView(missionRef, { once: true, margin: "-100px" });
    const isServicesInView = useInView(servicesRef, { once: true, margin: "-100px" });
    const isTestimonialsInView = useInView(testimonialsRef, { once: true, margin: "-100px" });

    useEffect(() => {
        if (isStatsInView) {
            const animateValue = (
                start: number,
                end: number,
                duration: number,
                setValue: (value: number) => void
            ) => {
                let startTime: number | null = null;
                const initialValue = start;
                const diff = end - initialValue;

                const easeOutCubic = (t: number) => 1 - Math.pow(1 - t, 3);

                const step = (timestamp: number) => {
                    if (!startTime) startTime = timestamp;
                    const progress = Math.min((timestamp - startTime) / duration, 1);
                    const eased = easeOutCubic(progress);
                    setValue(Math.floor(initialValue + diff * eased));
                    if (progress < 1) requestAnimationFrame(step);
                };

                requestAnimationFrame(step);
            };

            // Animate all values
            animateValue(0, cusSatisfied, 1000, setCusSatisfiedAnimated);
            animateValue(0, projectsCompleted, 1000, setProjectsCompletedAnimated);
            animateValue(0, hoursWorked, 1000, setHoursWorkedAnimated);
            animateValue(0, employees, 1000, setEmployeesAnimated);
        }
    }, [isStatsInView, cusSatisfied, projectsCompleted, hoursWorked, employees]);

    return (
        <div className="min-h-screen bg-white">
            {/* Header */}
            <motion.header
                className="bg-gray-100 py-16"
                initial={{ opacity: 0, y: -20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5 }}
            >
                <div className="container mx-auto px-4 text-center">
                    <motion.h1
                        className="text-4xl md:text-5xl font-bold text-gray-800 mb-4"
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ duration: 0.5, delay: 0.2 }}
                    >
                        V·ªÄ CH√öNG T√îI
                    </motion.h1>
                    <motion.p
                        className="text-lg text-gray-600 max-w-2xl mx-auto"
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ duration: 0.5, delay: 0.3 }}
                    >
                        Kh√°m ph√° c√¢u chuy·ªán, s·ª© m·ªánh v√† gi√° tr·ªã c·ªët l√µi c·ªßa ch√∫ng t√¥i
                    </motion.p>
                </div>
            </motion.header>

            {/* Our Story Section */}
            <section className="py-16" ref={storyRef}>
                <div className="container mx-auto px-4">
                    <motion.div
                        className="grid md:grid-cols-2 gap-12 items-center"
                        initial={{ opacity: 0, y: 50 }}
                        animate={isStoryInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 50 }}
                        transition={{ duration: 0.5 }}
                    >
                        <motion.div
                            initial={{ opacity: 0, x: -50 }}
                            animate={isStoryInView ? { opacity: 1, x: 0 } : { opacity: 0, x: -50 }}
                            transition={{ duration: 0.5, delay: 0.2 }}
                        >
                            <h2 className="text-3xl font-bold text-gray-800 mb-6">C√¢u Chuy·ªán C·ªßa Ch√∫ng T√¥i</h2>
                            <p className="text-gray-600 mb-4 leading-relaxed">
                                ƒê∆∞·ª£c th√†nh l·∫≠p v√†o nƒÉm 2020, ch√∫ng t√¥i b·∫Øt ƒë·∫ßu v·ªõi m·ªôt t·∫ßm nh√¨n ƒë∆°n gi·∫£n: mang ƒë·∫øn nh·ªØng gi·∫£i ph√°p c√¥ng
                                ngh·ªá t·ªët nh·∫•t cho doanh nghi·ªáp Vi·ªát Nam. T·ª´ m·ªôt ƒë·ªôi ng≈© nh·ªè g·ªìm 5 ng∆∞·ªùi, ch√∫ng t√¥i ƒë√£ ph√°t tri·ªÉn th√†nh
                                m·ªôt c√¥ng ty v·ªõi h∆°n 100 nh√¢n vi√™n t√†i nƒÉng.
                            </p>
                            <p className="text-gray-600 mb-4 leading-relaxed">
                                Ch√∫ng t√¥i tin r·∫±ng c√¥ng ngh·ªá kh√¥ng ch·ªâ l√† c√¥ng c·ª•, m√† l√† c·∫ßu n·ªëi gi√∫p k·∫øt n·ªëi con ng∆∞·ªùi v√† t·∫°o ra nh·ªØng
                                gi√° tr·ªã th·ª±c s·ª± cho x√£ h·ªôi. V·ªõi tinh th·∫ßn ƒë·ªïi m·ªõi kh√¥ng ng·ª´ng, ch√∫ng t√¥i lu√¥n n·ªó l·ª±c ƒë·ªÉ ƒëem l·∫°i nh·ªØng
                                tr·∫£i nghi·ªám tuy·ªát v·ªùi nh·∫•t cho kh√°ch h√†ng.
                            </p>
                            <p className="text-gray-600 leading-relaxed">
                                H√†nh tr√¨nh c·ªßa ch√∫ng t√¥i v·∫´n ƒëang ti·∫øp t·ª•c, v√† ch√∫ng t√¥i t·ª± h√†o l√† ƒë·ªëi t√°c tin c·∫≠y c·ªßa h√†ng ngh√¨n doanh
                                nghi·ªáp tr√™n kh·∫Øp Vi·ªát Nam.
                            </p>
                        </motion.div>
                        <motion.div
                            className="relative flex justify-center items-center"
                            initial={{ opacity: 0, x: 50 }}
                            animate={isStoryInView ? { opacity: 1, x: 0 } : { opacity: 0, x: 50 }}
                            transition={{ duration: 0.5, delay: 0.3 }}
                        >
                            <Image
                                src="https://res.cloudinary.com/dodtzdovx/image/upload/v1744874818/tai-sao-can-biet-cach-tao-dang-khi-chup-anh-2-1024x683_u3odis.jpg"
                                alt="C√¢u chuy·ªán c·ªßa ch√∫ng t√¥i"
                                width={500}
                                height={400}
                                className="rounded-lg shadow-lg"
                            />
                        </motion.div>
                    </motion.div>
                </div>
            </section>

            {/* Mission & Values Section */}
            <section className="py-16 bg-gray-50" ref={missionRef}>
                <div className="container mx-auto px-4">
                    <motion.div
                        className="text-center mb-12"
                        initial={{ opacity: 0, y: 30 }}
                        animate={isMissionInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}
                        transition={{ duration: 0.5 }}
                    >
                        <h2 className="text-3xl font-bold text-gray-800 mb-4">S·ª© M·ªánh & Gi√° Tr·ªã</h2>
                        <p className="text-gray-600 max-w-2xl mx-auto">
                            Nh·ªØng nguy√™n t·∫Øc c·ªët l√µi ƒë·ªãnh h∆∞·ªõng m·ªçi ho·∫°t ƒë·ªông c·ªßa ch√∫ng t√¥i
                        </p>
                    </motion.div>

                    <motion.div
                        className="grid md:grid-cols-3 gap-8"
                        initial={{ opacity: 0, y: 50 }}
                        animate={isMissionInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 50 }}
                        transition={{ duration: 0.5, delay: 0.2 }}
                    >
                        {[
                            {
                                icon: "üéØ",
                                title: "Cam K·∫øt Ch·∫•t L∆∞·ª£ng",
                                description: "Ch√∫ng t√¥i cam k·∫øt mang ƒë·∫øn nh·ªØng s·∫£n ph·∫©m v√† d·ªãch v·ª• ch·∫•t l∆∞·ª£ng cao nh·∫•t, ƒë√°p ·ª©ng v√† v∆∞·ª£t qua mong ƒë·ª£i c·ªßa kh√°ch h√†ng."
                            },
                            {
                                icon: "‚≠ê",
                                title: "Ch·∫•t L∆∞·ª£ng & Xu·∫•t S·∫Øc",
                                description: "S·ª± xu·∫•t s·∫Øc kh√¥ng ph·∫£i l√† m·ªôt h√†nh ƒë·ªông m√† l√† m·ªôt th√≥i quen. Ch√∫ng t√¥i lu√¥n ph·∫•n ƒë·∫•u ƒë·ªÉ ƒë·∫°t ƒë∆∞·ª£c ti√™u chu·∫©n cao nh·∫•t trong m·ªçi vi·ªác."
                            },
                            {
                                icon: "üîí",
                                title: "Hi·ªáu Qu·∫£ & Minh B·∫°ch",
                                description: "Ch√∫ng t√¥i ho·∫°t ƒë·ªông v·ªõi s·ª± minh b·∫°ch tuy·ªát ƒë·ªëi v√† t·∫≠p trung v√†o vi·ªác mang l·∫°i hi·ªáu qu·∫£ t·ªëi ƒëa cho m·ªçi d·ª± √°n."
                            }
                        ].map((item, index) => (
                            <motion.div
                                key={index}
                                initial={{ opacity: 0, y: 30 }}
                                animate={isMissionInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}
                                transition={{ duration: 0.5, delay: 0.3 + index * 0.1 }}
                            >
                                <Card className="text-center p-6 border-none shadow-lg">
                                    <CardContent className="pt-6">
                                        <div className="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
                                            <span className="text-2xl">{item.icon}</span>
                                        </div>
                                        <h3 className="text-xl font-semibold text-gray-800 mb-3">{item.title}</h3>
                                        <p className="text-gray-600">{item.description}</p>
                                    </CardContent>
                                </Card>
                            </motion.div>
                        ))}
                    </motion.div>
                </div>
            </section>

            {/* Services Section */}
            <section className="py-16" ref={servicesRef}>
                <div className="container mx-auto px-4">
                    <motion.div
                        className="text-center mb-12"
                        initial={{ opacity: 0, y: 30 }}
                        animate={isServicesInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}
                        transition={{ duration: 0.5 }}
                    >
                        <h2 className="text-3xl font-bold text-gray-800 mb-4">D·ªãch V·ª• C·ªßa Ch√∫ng T√¥i</h2>
                        <p className="text-gray-600 max-w-2xl mx-auto">
                            Ch√∫ng t√¥i cung c·∫•p ƒëa d·∫°ng c√°c d·ªãch v·ª• ƒë·ªÉ ƒë√°p ·ª©ng m·ªçi nhu c·∫ßu c·ªßa kh√°ch h√†ng
                        </p>
                    </motion.div>

                    <motion.div
                        className="grid md:grid-cols-3 gap-8"
                        initial={{ opacity: 0, y: 50 }}
                        animate={isServicesInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 50 }}
                        transition={{ duration: 0.5, delay: 0.2 }}
                    >
                        {[
                            {
                                gradient: "from-blue-500 to-blue-700",
                                title: "Ph√°t Tri·ªÉn ·ª®ng D·ª•ng",
                                description: "X√¢y d·ª±ng ·ª©ng d·ª•ng di ƒë·ªông v√† web hi·ªán ƒë·∫°i v·ªõi c√¥ng ngh·ªá ti√™n ti·∫øn nh·∫•t"
                            },
                            {
                                gradient: "from-green-500 to-green-700",
                                title: "T∆∞ V·∫•n S·ªë",
                                description: "H·ªó tr·ª£ doanh nghi·ªáp chuy·ªÉn ƒë·ªïi s·ªë v√† t·ªëi ∆∞u h√≥a quy tr√¨nh kinh doanh"
                            },
                            {
                                gradient: "from-purple-500 to-purple-700",
                                title: "D·ªãch V·ª• Marketing",
                                description: "Chi·∫øn l∆∞·ª£c marketing s·ªë to√†n di·ªán ƒë·ªÉ tƒÉng tr∆∞·ªüng doanh nghi·ªáp b·ªÅn v·ªØng"
                            }
                        ].map((service, index) => (
                            <motion.div
                                key={index}
                                initial={{ opacity: 0, y: 30 }}
                                animate={isServicesInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}
                                transition={{ duration: 0.5, delay: 0.3 + index * 0.1 }}
                            >
                                <Card className="relative overflow-hidden group cursor-pointer">
                                    <div className={`aspect-video bg-gradient-to-br ${service.gradient} relative`}>
                                        <Image
                                            src="/placeholder.svg?height=200&width=300"
                                            alt={service.title}
                                            width={300}
                                            height={200}
                                            className="w-full h-full object-cover opacity-20"
                                        />
                                        <div className="absolute inset-0 bg-black bg-opacity-40 flex items-end p-6">
                                            <div className="text-white">
                                                <h3 className="text-xl font-semibold mb-2">{service.title}</h3>
                                                <p className="text-sm opacity-90">{service.description}</p>
                                            </div>
                                        </div>
                                    </div>
                                </Card>
                            </motion.div>
                        ))}
                    </motion.div>
                </div>
            </section>

            {/* Statistics Section */}
            <section className="py-16 bg-gray-900 text-white" ref={statsRef}>
                <div className="container mx-auto px-4">
                    <motion.div
                        className="grid grid-cols-2 md:grid-cols-4 gap-8 text-center"
                        initial={{ opacity: 0, y: 50 }}
                        animate={isStatsInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 50 }}
                        transition={{ duration: 0.5 }}
                    >
                        <motion.div
                            initial={{ opacity: 0, y: 20 }}
                            animate={isStatsInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
                            transition={{ duration: 0.5, delay: 0.1 }}
                        >
                            <div className="text-4xl md:text-5xl font-bold mb-2">{cusSatisfiedAnimated}+</div>
                            <div className="text-gray-300">Kh√°ch H√†ng H√†i L√≤ng</div>
                        </motion.div>
                        <motion.div
                            initial={{ opacity: 0, y: 20 }}
                            animate={isStatsInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
                            transition={{ duration: 0.5, delay: 0.2 }}
                        >
                            <div className="text-4xl md:text-5xl font-bold mb-2">{projectsCompletedAnimated}+</div>
                            <div className="text-gray-300">D·ª± √Ån Ho√†n Th√†nh</div>
                        </motion.div>
                        <motion.div
                            initial={{ opacity: 0, y: 20 }}
                            animate={isStatsInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
                            transition={{ duration: 0.5, delay: 0.3 }}
                        >
                            <div className="text-4xl md:text-5xl font-bold mb-2">{hoursWorkedAnimated}+</div>
                            <div className="text-gray-300">Gi·ªù L√†m Vi·ªác</div>
                        </motion.div>
                        <motion.div
                            initial={{ opacity: 0, y: 20 }}
                            animate={isStatsInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
                            transition={{ duration: 0.5, delay: 0.4 }}
                        >
                            <div className="text-4xl md:text-5xl font-bold mb-2">{employeesAnimated}+</div>
                            <div className="text-gray-300">Nh√¢n Vi√™n T√†i NƒÉng</div>
                        </motion.div>
                    </motion.div>
                </div>
            </section>

            {/* Testimonials Section */}
            <section className="py-16 bg-gray-50" ref={testimonialsRef}>
                <div className="container mx-auto px-4">
                    <motion.div
                        className="text-center mb-12"
                        initial={{ opacity: 0, y: 30 }}
                        animate={isTestimonialsInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}
                        transition={{ duration: 0.5 }}
                    >
                        <h2 className="text-3xl font-bold text-gray-800 mb-4">Kh√°ch H√†ng N√≥i G√¨</h2>
                        <p className="text-gray-600 max-w-2xl mx-auto">
                            Nh·ªØng ph·∫£n h·ªìi ch√¢n th·ª±c t·ª´ kh√°ch h√†ng v·ªÅ d·ªãch v·ª• c·ªßa ch√∫ng t√¥i
                        </p>
                    </motion.div>

                    <motion.div
                        className="grid md:grid-cols-3 gap-8"
                        initial={{ opacity: 0, y: 50 }}
                        animate={isTestimonialsInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 50 }}
                        transition={{ duration: 0.5, delay: 0.2 }}
                    >
                        {[
                            {
                                name: "Nguy·ªÖn VƒÉn An",
                                position: "Gi√°m ƒë·ªëc ABC Company",
                                quote: "ƒê·ªôi ng≈© r·∫•t chuy√™n nghi·ªáp v√† nhi·ªát t√¨nh. S·∫£n ph·∫©m ƒë∆∞·ª£c giao ƒë√∫ng th·ªùi gian v√† ch·∫•t l∆∞·ª£ng v∆∞·ª£t mong ƒë·ª£i. Ch√∫ng t√¥i r·∫•t h√†i l√≤ng v·ªõi d·ªãch v·ª•."
                            },
                            {
                                name: "Tr·∫ßn Th·ªã B√¨nh",
                                position: "CEO XYZ Tech",
                                quote: "T√¥i ƒë√£ l√†m vi·ªác v·ªõi nhi·ªÅu c√¥ng ty kh√°c nh∆∞ng ch∆∞a c√¥ng ty n√†o mang l·∫°i s·ª± h√†i l√≤ng nh∆∞ th·∫ø n√†y. D·ªãch v·ª• tuy·ªát v·ªùi, h·ªó tr·ª£ 24/7."
                            },
                            {
                                name: "L√™ Minh C∆∞·ªùng",
                                position: "Founder DEF Solutions",
                                quote: "Gi·∫£i ph√°p h·ªç ƒë∆∞a ra ƒë√£ gi√∫p c√¥ng ty ch√∫ng t√¥i tƒÉng hi·ªáu qu·∫£ l√†m vi·ªác l√™n 300%. ƒê√¢y th·ª±c s·ª± l√† ƒë·ªëi t√°c ƒë√°ng tin c·∫≠y cho doanh nghi·ªáp."
                            }
                        ].map((testimonial, index) => (
                            <motion.div
                                key={index}
                                initial={{ opacity: 0, y: 30 }}
                                animate={isTestimonialsInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}
                                transition={{ duration: 0.5, delay: 0.3 + index * 0.1 }}
                            >
                                <Card className="p-6 border-none shadow-lg">
                                    <CardContent className="pt-0">
                                        <div className="flex mb-4">
                                            {[...Array(5)].map((_, i) => (
                                                <Star key={i} className="w-5 h-5 fill-yellow-400 text-yellow-400" />
                                            ))}
                                        </div>
                                        <p className="text-gray-600 mb-4 italic">
                                            <q>{testimonial.quote}</q>
                                        </p>
                                        <div className="flex items-center">
                                            <div className="w-10 h-10 bg-gray-300 rounded-full mr-3"></div>
                                            <div>
                                                <div className="font-semibold text-gray-800">{testimonial.name}</div>
                                                <div className="text-sm text-gray-500">{testimonial.position}</div>
                                            </div>
                                        </div>
                                    </CardContent>
                                </Card>
                            </motion.div>
                        ))}
                    </motion.div>
                </div>
            </section>

            {/* CTA Section */}
            <motion.section
                className="py-16 bg-gray-200 text-black"
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5 }}
                viewport={{ once: true, margin: "-100px" }}
            >
                <div className="container mx-auto px-4 text-center">
                    <motion.h2
                        className="text-3xl md:text-4xl font-bold mb-4"
                        initial={{ opacity: 0, y: 20 }}
                        whileInView={{ opacity: 1, y: 0 }}
                        transition={{ duration: 0.5, delay: 0.2 }}
                        viewport={{ once: true }}
                    >
                        S·∫µn S√†ng B·∫Øt ƒê·∫ßu?
                    </motion.h2>
                    <motion.p
                        className="text-xl mb-8 opacity-90 max-w-2xl mx-auto"
                        initial={{ opacity: 0, y: 20 }}
                        whileInView={{ opacity: 1, y: 0 }}
                        transition={{ duration: 0.5, delay: 0.3 }}
                        viewport={{ once: true }}
                    >
                        H√£y li√™n h·ªá v·ªõi ch√∫ng t√¥i ngay h√¥m nay ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n mi·ªÖn ph√≠ v√† kh√°m ph√° c√°ch ch√∫ng t√¥i c√≥ th·ªÉ gi√∫p doanh
                        nghi·ªáp c·ªßa b·∫°n ph√°t tri·ªÉn.
                    </motion.p>
                    <motion.div
                        className="flex flex-col sm:flex-row gap-4 justify-center"
                        initial={{ opacity: 0, y: 20 }}
                        whileInView={{ opacity: 1, y: 0 }}
                        transition={{ duration: 0.5, delay: 0.4 }}
                        viewport={{ once: true }}
                    >
                        <Link href="/contact">
                            <Button className="bg-[var(--bg-primary)] text-white hover:bg-[var(--bg-primary)/80]">
                                Li√™n H·ªá Ngay
                            </Button>
                        </Link>
                        <Link href="/services">
                            <Button className="bg-[var(--bg-primary)] text-white hover:bg-[var(--bg-primary)]/80">
                                T√¨m Hi·ªÉu Th√™m
                            </Button>
                        </Link>
                    </motion.div>
                </div>
            </motion.section>
        </div>
    )
}
