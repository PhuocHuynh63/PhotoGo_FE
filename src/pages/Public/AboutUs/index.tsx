'use client'

import Image from "next/image"
import { Card, CardContent } from "@/components/Atoms/ui/card"
import { Star } from "lucide-react"
import { useEffect, useState, useRef } from "react";
import { motion, useInView } from "framer-motion";
import Link from "next/link"
import Button from "@components/Atoms/Button";

export default function AboutPage() {

    const [cusSatisfied] = useState(5000);
    const [cusSatisfiedAnimated, setCusSatisfiedAnimated] = useState(0);
    const [projectsCompleted] = useState(1000);
    const [projectsCompletedAnimated, setProjectsCompletedAnimated] = useState(0);
    const [hoursWorked] = useState(50000);
    const [hoursWorkedAnimated, setHoursWorkedAnimated] = useState(0);
    const [employees] = useState(100);
    const [employeesAnimated, setEmployeesAnimated] = useState(0);

    const statsRef = useRef(null);
    const storyRef = useRef(null);
    const missionRef = useRef(null);
    const servicesRef = useRef(null);
    const testimonialsRef = useRef(null);

    const isStatsInView = useInView(statsRef, { once: true, margin: "-100px" });
    const isStoryInView = useInView(storyRef, { once: true, margin: "-100px" });
    const isMissionInView = useInView(missionRef, { once: true, margin: "-100px" });
    const isServicesInView = useInView(servicesRef, { once: true, margin: "-100px" });
    const isTestimonialsInView = useInView(testimonialsRef, { once: true, margin: "-100px" });

    useEffect(() => {
        if (isStatsInView) {
            const animateValue = (
                start: number,
                end: number,
                duration: number,
                setValue: (value: number) => void
            ) => {
                let startTime: number | null = null;
                const initialValue = start;
                const diff = end - initialValue;

                const easeOutCubic = (t: number) => 1 - Math.pow(1 - t, 3);

                const step = (timestamp: number) => {
                    if (!startTime) startTime = timestamp;
                    const progress = Math.min((timestamp - startTime) / duration, 1);
                    const eased = easeOutCubic(progress);
                    setValue(Math.floor(initialValue + diff * eased));
                    if (progress < 1) requestAnimationFrame(step);
                };

                requestAnimationFrame(step);
            };

            // Animate all values
            animateValue(0, cusSatisfied, 1000, setCusSatisfiedAnimated);
            animateValue(0, projectsCompleted, 1000, setProjectsCompletedAnimated);
            animateValue(0, hoursWorked, 1000, setHoursWorkedAnimated);
            animateValue(0, employees, 1000, setEmployeesAnimated);
        }
    }, [isStatsInView, cusSatisfied, projectsCompleted, hoursWorked, employees]);

    return (
        <div className="min-h-screen bg-white mt-14">
            {/* Header */}
            <motion.header
                className="bg-gray-100 py-16"
                initial={{ opacity: 0, y: -20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5 }}
            >
                <div className="container mx-auto px-4 text-center">
                    <motion.h1
                        className="text-4xl md:text-5xl font-bold text-gray-800 mb-4"
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ duration: 0.5, delay: 0.2 }}
                    >
                        V·ªÄ PHOTOGO
                    </motion.h1>
                    <motion.p
                        className="text-lg text-gray-600 max-w-2xl mx-auto"
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ duration: 0.5, delay: 0.3 }}
                    >
                        N·ªÅn t·∫£ng duy nh·∫•t c·ªßa b·∫°n ƒë·ªÉ ƒë·∫∑t l·ªãch v·ªõi c√°c nhi·∫øp ·∫£nh gia, studio v√† ngh·ªá sƒ© trang ƒëi·ªÉm chuy√™n nghi·ªáp. Ghi l·∫°i kho·∫£nh kh·∫Øc ho√†n h·∫£o c·ªßa b·∫°n m·ªôt c√°ch d·ªÖ d√†ng, nhanh ch√≥ng v√† minh b·∫°ch.
                    </motion.p>
                </div>
            </motion.header>

            {/* Our Story Section */}
            <section className="py-16" ref={storyRef}>
                <div className="container mx-auto px-4">
                    <motion.div
                        className="grid md:grid-cols-2 gap-12 items-center"
                        initial={{ opacity: 0, y: 50 }}
                        animate={isStoryInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 50 }}
                        transition={{ duration: 0.5 }}
                    >
                        <motion.div
                            initial={{ opacity: 0, x: -50 }}
                            animate={isStoryInView ? { opacity: 1, x: 0 } : { opacity: 0, x: -50 }}
                            transition={{ duration: 0.5, delay: 0.2 }}
                        >
                            <h2 className="text-3xl font-bold text-gray-800 mb-6">C√¢u Chuy·ªán PhotoGo</h2>
                            <p className="text-gray-600 mb-4 leading-relaxed">
                                PhotoGo ra ƒë·ªùi v·ªõi mong mu·ªën tr·ªü th√†nh c·∫ßu n·ªëi gi·ªØa kh√°ch h√†ng v√† c√°c nhi·∫øp ·∫£nh gia, studio, ngh·ªá sƒ© trang ƒëi·ªÉm h√†ng ƒë·∫ßu. Ch√∫ng t√¥i nh·∫≠n th·∫•y nhu c·∫ßu ghi l·∫°i nh·ªØng kho·∫£nh kh·∫Øc ƒë·∫πp ng√†y c√†ng l·ªõn, nh∆∞ng vi·ªác t√¨m ki·∫øm, ƒë·∫∑t l·ªãch c√°c d·ªãch v·ª• li√™n quan l·∫°i r·ªùi r·∫°c, thi·∫øu minh b·∫°ch v√† m·∫•t th·ªùi gian.
                            </p>
                            <p className="text-gray-600 mb-4 leading-relaxed">
                                V·ªõi PhotoGo, m·ªçi nhu c·∫ßu ch·ª•p ·∫£nh, trang ƒëi·ªÉm, thu√™ studio ƒë·ªÅu ƒë∆∞·ª£c gi·∫£i quy·∫øt ch·ªâ trong m·ªôt n·ªÅn t·∫£ng duy nh·∫•t. Ch√∫ng t√¥i cam k·∫øt mang ƒë·∫øn tr·∫£i nghi·ªám ƒë·∫∑t l·ªãch nhanh ch√≥ng, ƒëa d·∫°ng l·ª±a ch·ªçn, gi√° c·∫£ r√µ r√†ng v√† d·ªãch v·ª• chuy√™n nghi·ªáp.
                            </p>
                            <p className="text-gray-600 leading-relaxed">
                                H√†nh tr√¨nh c·ªßa PhotoGo v·∫´n ƒëang ti·∫øp t·ª•c, v·ªõi m·ª•c ti√™u gi√∫p h√†ng ng√†n kh√°ch h√†ng l∆∞u gi·ªØ nh·ªØng kho·∫£nh kh·∫Øc √Ω nghƒ©a nh·∫•t trong cu·ªôc s·ªëng.
                            </p>
                        </motion.div>
                        <motion.div
                            className="relative flex justify-center items-center"
                            initial={{ opacity: 0, x: 50 }}
                            animate={isStoryInView ? { opacity: 1, x: 0 } : { opacity: 0, x: 50 }}
                            transition={{ duration: 0.5, delay: 0.3 }}
                        >
                            <Image
                                src="https://res.cloudinary.com/dodtzdovx/image/upload/v1744187841/photogo_orange_jslflw.svg"
                                alt="C√¢u chuy·ªán c·ªßa PhotoGo"
                                width={500}
                                height={400}
                                className="rounded-lg shadow-lg"
                            />
                        </motion.div>
                    </motion.div>
                </div>
            </section>

            {/* Mission & Values Section */}
            <section className="py-16 bg-gray-50" ref={missionRef}>
                <div className="container mx-auto px-4">
                    <motion.div
                        className="text-center mb-12"
                        initial={{ opacity: 0, y: 30 }}
                        animate={isMissionInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}
                        transition={{ duration: 0.5 }}
                    >
                        <h2 className="text-3xl font-bold text-gray-800 mb-4">S·ª© M·ªánh & Gi√° Tr·ªã C·ªët L√µi</h2>
                        <p className="text-gray-600 max-w-2xl mx-auto">
                            PhotoGo h∆∞·ªõng t·ªõi vi·ªác ƒë∆°n gi·∫£n h√≥a qu√° tr√¨nh ƒë·∫∑t l·ªãch ch·ª•p ·∫£nh, trang ƒëi·ªÉm, gi√∫p kh√°ch h√†ng ti·∫øt ki·ªám th·ªùi gian, chi ph√≠ v√† nh·∫≠n ƒë∆∞·ª£c d·ªãch v·ª• t·ªët nh·∫•t.
                        </p>
                    </motion.div>

                    <motion.div
                        className="grid md:grid-cols-3 gap-8"
                        initial={{ opacity: 0, y: 50 }}
                        animate={isMissionInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 50 }}
                        transition={{ duration: 0.5, delay: 0.2 }}
                    >
                        {[
                            {
                                icon: "üéØ",
                                title: "Ti·ªán L·ª£i & Nhanh Ch√≥ng",
                                description: "ƒê·∫∑t l·ªãch m·ªçi d·ªãch v·ª• ch·ªâ trong v√†i ph√∫t, thao t√°c ƒë∆°n gi·∫£n, ti·∫øt ki·ªám th·ªùi gian cho kh√°ch h√†ng."
                            },
                            {
                                icon: "‚≠ê",
                                title: "ƒêa D·∫°ng & Chuy√™n Nghi·ªáp",
                                description: "H√†ng trƒÉm nhi·∫øp ·∫£nh gia, studio, makeup artist v·ªõi nhi·ªÅu phong c√°ch, kinh nghi·ªám, ƒë√°p ·ª©ng m·ªçi nhu c·∫ßu."
                            },
                            {
                                icon: "üîí",
                                title: "Minh B·∫°ch & Uy T√≠n",
                                description: "Gi√° c·∫£ r√µ r√†ng, ƒë√°nh gi√° th·ª±c t·∫ø t·ª´ kh√°ch h√†ng, cam k·∫øt ch·∫•t l∆∞·ª£ng d·ªãch v·ª•."
                            }
                        ].map((item, index) => (
                            <motion.div
                                key={index}
                                initial={{ opacity: 0, y: 30 }}
                                animate={isMissionInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}
                                transition={{ duration: 0.5, delay: 0.3 + index * 0.1 }}
                            >
                                <Card className="text-center p-6 border-none shadow-lg">
                                    <CardContent className="pt-6">
                                        <div className="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
                                            <span className="text-2xl">{item.icon}</span>
                                        </div>
                                        <h3 className="text-xl font-semibold text-gray-800 mb-3">{item.title}</h3>
                                        <p className="text-gray-600">{item.description}</p>
                                    </CardContent>
                                </Card>
                            </motion.div>
                        ))}
                    </motion.div>
                </div>
            </section>

            {/* Services Section */}
            <section className="py-16" ref={servicesRef}>
                <div className="container mx-auto px-4">
                    <motion.div
                        className="text-center mb-12"
                        initial={{ opacity: 0, y: 30 }}
                        animate={isServicesInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}
                        transition={{ duration: 0.5 }}
                    >
                        <h2 className="text-3xl font-bold text-gray-800 mb-4">D·ªãch V·ª• N·ªïi B·∫≠t</h2>
                        <p className="text-gray-600 max-w-2xl mx-auto">
                            PhotoGo cung c·∫•p ƒë·∫ßy ƒë·ªß c√°c d·ªãch v·ª• ch·ª•p ·∫£nh, trang ƒëi·ªÉm, thu√™ studio ƒë·ªÉ ƒë√°p ·ª©ng m·ªçi nhu c·∫ßu c·ªßa b·∫°n.
                        </p>
                    </motion.div>

                    <motion.div
                        className="grid md:grid-cols-3 gap-8"
                        initial={{ opacity: 0, y: 50 }}
                        animate={isServicesInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 50 }}
                        transition={{ duration: 0.5, delay: 0.2 }}
                    >
                        {[
                            {
                                gradient: "from-blue-500 to-blue-700",
                                title: "Nhi·∫øp ·∫¢nh Gia",
                                img: "https://res.cloudinary.com/dodtzdovx/image/upload/v1753273724/Nhiepanh-Gia-Large-01_ixkj80.jpg",
                                description: "T√¨m ki·∫øm v√† ƒë·∫∑t l·ªãch v·ªõi nhi·∫øp ·∫£nh gia ph√π h·ª£p, ƒëa d·∫°ng phong c√°ch, linh ho·∫°t v·ªÅ th·ªùi gian v√† ƒë·ªãa ƒëi·ªÉm."
                            },
                            {
                                gradient: "from-green-500 to-green-700",
                                title: "Studio Ch·ª•p ·∫¢nh",
                                img: "https://res.cloudinary.com/dodtzdovx/image/upload/v1753274116/studio-chup-anh-do-noi-that-tan-noi-vietnam_hsq8p7.jpg",
                                description: "ƒê·∫∑t ph√≤ng studio hi·ªán ƒë·∫°i, trang b·ªã ƒë·∫ßy ƒë·ªß, nhi·ªÅu ph√¥ng n·ªÅn, √°nh s√°ng chuy√™n nghi·ªáp."
                            },
                            {
                                gradient: "from-purple-500 to-purple-700",
                                title: "Makeup Artist",
                                img: "https://res.cloudinary.com/dodtzdovx/image/upload/v1753273724/Makeup-Artist-noi-tieng-Viet-Nam-1_ebtfrg.jpg",
                                description: "Trang ƒëi·ªÉm chuy√™n nghi·ªáp cho m·ªçi bu·ªïi ch·ª•p ·∫£nh, ƒëa d·∫°ng phong c√°ch, s·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng cao."
                            }
                        ].map((service, index) => (
                            <motion.div
                                key={index}
                                initial={{ opacity: 0, y: 30 }}
                                animate={isServicesInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}
                                transition={{ duration: 0.5, delay: 0.3 + index * 0.1 }}
                            >
                                <Card className="relative overflow-hidden group cursor-pointer">
                                    <div className={`aspect-video bg-gradient-to-br ${service.gradient} relative`}>
                                        <Image
                                            src={service.img}
                                            alt={service.title}
                                            width={300}
                                            height={200}
                                            className="w-full h-full object-cover opacity-20"
                                        />
                                        <div className="absolute inset-0 bg-opacity-40 flex items-end p-6">
                                            <div className="text-white">
                                                <h3 className="text-xl font-semibold mb-2">{service.title}</h3>
                                                <p className="text-sm opacity-90">{service.description}</p>
                                            </div>
                                        </div>
                                    </div>
                                </Card>
                            </motion.div>
                        ))}
                    </motion.div>
                </div>
            </section>

            {/* Statistics Section */}
            <section className="py-16 bg-gray-900 text-white" ref={statsRef}>
                <div className="container mx-auto px-4">
                    <motion.div
                        className="grid grid-cols-2 md:grid-cols-4 gap-8 text-center"
                        initial={{ opacity: 0, y: 50 }}
                        animate={isStatsInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 50 }}
                        transition={{ duration: 0.5 }}
                    >
                        <motion.div
                            initial={{ opacity: 0, y: 20 }}
                            animate={isStatsInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
                            transition={{ duration: 0.5, delay: 0.1 }}
                        >
                            <div className="text-4xl md:text-5xl font-bold mb-2">{cusSatisfiedAnimated}+</div>
                            <div className="text-gray-300">Kh√°ch H√†ng H√†i L√≤ng</div>
                        </motion.div>
                        <motion.div
                            initial={{ opacity: 0, y: 20 }}
                            animate={isStatsInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
                            transition={{ duration: 0.5, delay: 0.2 }}
                        >
                            <div className="text-4xl md:text-5xl font-bold mb-2">{projectsCompletedAnimated}+</div>
                            <div className="text-gray-300">D·ª± √Ån Ho√†n Th√†nh</div>
                        </motion.div>
                        <motion.div
                            initial={{ opacity: 0, y: 20 }}
                            animate={isStatsInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
                            transition={{ duration: 0.5, delay: 0.3 }}
                        >
                            <div className="text-4xl md:text-5xl font-bold mb-2">{hoursWorkedAnimated}+</div>
                            <div className="text-gray-300">Gi·ªù L√†m Vi·ªác</div>
                        </motion.div>
                        <motion.div
                            initial={{ opacity: 0, y: 20 }}
                            animate={isStatsInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
                            transition={{ duration: 0.5, delay: 0.4 }}
                        >
                            <div className="text-4xl md:text-5xl font-bold mb-2">{employeesAnimated}+</div>
                            <div className="text-gray-300">Nh√¢n Vi√™n T√†i NƒÉng</div>
                        </motion.div>
                    </motion.div>
                </div>
            </section>

            {/* Testimonials Section */}
            <section className="py-16 bg-gray-50" ref={testimonialsRef}>
                <div className="container mx-auto px-4">
                    <motion.div
                        className="text-center mb-12"
                        initial={{ opacity: 0, y: 30 }}
                        animate={isTestimonialsInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}
                        transition={{ duration: 0.5 }}
                    >
                        <h2 className="text-3xl font-bold text-gray-800 mb-4">Kh√°ch H√†ng N√≥i G√¨</h2>
                        <p className="text-gray-600 max-w-2xl mx-auto">
                            L·∫Øng nghe c·∫£m nh·∫≠n th·ª±c t·∫ø t·ª´ nh·ªØng kh√°ch h√†ng ƒë√£ s·ª≠ d·ª•ng PhotoGo
                        </p>
                    </motion.div>

                    <motion.div
                        className="grid md:grid-cols-3 gap-8"
                        initial={{ opacity: 0, y: 50 }}
                        animate={isTestimonialsInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 50 }}
                        transition={{ duration: 0.5, delay: 0.2 }}
                    >
                        {[
                            {
                                name: "Ph·∫°m Th·ªã H·∫°nh",
                                position: "Kh√°ch h√†ng ch·ª•p ·∫£nh c∆∞·ªõi",
                                quote: "T√¥i r·∫•t h√†i l√≤ng khi ƒë·∫∑t l·ªãch ch·ª•p ·∫£nh c∆∞·ªõi qua PhotoGo. Nhi·∫øp ·∫£nh gia chuy√™n nghi·ªáp, h·ªó tr·ª£ t·∫≠n t√¨nh v√† gi√° c·∫£ r√µ r√†ng!"
                            },
                            {
                                name: "Nguy·ªÖn Minh Qu√¢n",
                                position: "Kh√°ch h√†ng thu√™ studio",
                                quote: "Studio tr√™n PhotoGo r·∫•t ƒëa d·∫°ng, d·ªÖ d√†ng so s√°nh v√† ƒë·∫∑t l·ªãch. M√¨nh ƒë√£ c√≥ b·ªô ·∫£nh k·ª∑ y·∫øu tuy·ªát ƒë·∫πp c√πng b·∫°n b√®."
                            },
                            {
                                name: "L√™ Th·ªã Mai",
                                position: "Kh√°ch h√†ng makeup",
                                quote: "M√¨nh book makeup artist qua PhotoGo cho bu·ªïi ch·ª•p ·∫£nh gia ƒë√¨nh, r·∫•t ∆∞ng √Ω v√¨ ƒë∆∞·ª£c t∆∞ v·∫•n k·ªπ v√† trang ƒëi·ªÉm h·ª£p phong c√°ch."
                            }
                        ].map((testimonial, index) => (
                            <motion.div
                                key={index}
                                initial={{ opacity: 0, y: 30 }}
                                animate={isTestimonialsInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}
                                transition={{ duration: 0.5, delay: 0.3 + index * 0.1 }}
                            >
                                <Card className="p-6 border-none shadow-lg">
                                    <CardContent className="pt-0">
                                        <div className="flex mb-4">
                                            {[...Array(5)].map((_, i) => (
                                                <Star key={i} className="w-5 h-5 fill-yellow-400 text-yellow-400" />
                                            ))}
                                        </div>
                                        <p className="text-gray-600 mb-4 italic">
                                            <q>{testimonial.quote}</q>
                                        </p>
                                        <div className="flex items-center">
                                            <div className="w-10 h-10 bg-gray-300 rounded-full mr-3"></div>
                                            <div>
                                                <div className="font-semibold text-gray-800">{testimonial.name}</div>
                                                <div className="text-sm text-gray-500">{testimonial.position}</div>
                                            </div>
                                        </div>
                                    </CardContent>
                                </Card>
                            </motion.div>
                        ))}
                    </motion.div>
                </div>
            </section>

            {/* CTA Section */}
            <motion.section
                className="py-16 bg-gray-200 text-black"
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5 }}
                viewport={{ once: true, margin: "-100px" }}
            >
                <div className="container mx-auto px-4 text-center">
                    <motion.h2
                        className="text-3xl md:text-4xl font-bold mb-4"
                        initial={{ opacity: 0, y: 20 }}
                        whileInView={{ opacity: 1, y: 0 }}
                        transition={{ duration: 0.5, delay: 0.2 }}
                        viewport={{ once: true }}
                    >
                        S·∫µn S√†ng Ghi L·∫°i Kho·∫£nh Kh·∫Øc C·ªßa B·∫°n?
                    </motion.h2>
                    <motion.p
                        className="text-xl mb-8 opacity-90 max-w-2xl mx-auto"
                        initial={{ opacity: 0, y: 20 }}
                        whileInView={{ opacity: 1, y: 0 }}
                        transition={{ duration: 0.5, delay: 0.3 }}
                        viewport={{ once: true }}
                    >
                        ƒê·∫∑t l·ªãch ngay v·ªõi nhi·∫øp ·∫£nh gia, studio ho·∫∑c makeup artist tr√™n PhotoGo ƒë·ªÉ tr·∫£i nghi·ªám d·ªãch v·ª• chuy√™n nghi·ªáp, ti·ªán l·ª£i v√† minh b·∫°ch.
                    </motion.p>
                    <motion.div
                        className="flex flex-col sm:flex-row gap-4 justify-center"
                        initial={{ opacity: 0, y: 20 }}
                        whileInView={{ opacity: 1, y: 0 }}
                        transition={{ duration: 0.5, delay: 0.4 }}
                        viewport={{ once: true }}
                    >
                        <Link href="/contact">
                            <Button className="bg-[var(--bg-primary)] text-white hover:bg-[var(--bg-primary)/80]">
                                Li√™n H·ªá Ngay
                            </Button>
                        </Link>
                        <Link href="/services">
                            <Button className="bg-[var(--bg-primary)] text-white hover:bg-[var(--bg-primary)]/80">
                                Kh√°m Ph√° D·ªãch V·ª•
                            </Button>
                        </Link>
                    </motion.div>
                </div>
            </motion.section>
        </div>
    )
}
